// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Post {
    id        Int     @id @default(autoincrement())
    post      String  @db.Text
    isPublic  Boolean @default(true) @map("is_public")
    isArchive Boolean @default(false) @map("is_archive")

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @updatedAt @map("updated_at")
    deletedAt DateTime? @map("deleted_at")

    author   User   @relation(fields: [authorId], references: [id])
    authorId String @map("author_id")

    comments Comment[]

    @@index([post])
    @@map("posts")
}

model Comment {
    id      Int    @id @default(autoincrement())
    comment String @db.Text

    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @updatedAt @map("updated_at")
    deletedAt DateTime? @map("deleted_at")

    authorId String @map("author_id")
    author   User   @relation(fields: [authorId], references: [id])

    postId Int  @map("post_id")
    post   Post @relation(fields: [postId], references: [id])

    @@map("comments")
}

model User {
    id        String  @id @default(cuid())
    firstName String  @map("first_name") @db.VarChar(100)
    lastName  String? @map("last_name") @db.VarChar(100)
    username  String  @unique @db.VarChar(100)
    email     String  @unique
    password  String  @db.VarChar(100)

    posts    Post[]
    comments Comment[]

    @@map("users")
}
